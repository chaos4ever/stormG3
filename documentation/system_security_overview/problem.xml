<?xml version='1.0' ?> <!-- -*- xml -*- -->
<!-- $chaos: license.xml,v 1.2 2002/05/27 09:48:51 per Exp $ -->

  <chapter id="problem">
  <?dbhtml filename="problem.html"?>
  <title>The Problem</title>
  <section>
    <title>The Problem</title>
    <para>
      All of these systems that we have gone through have some
      problems. Obviously, systems with no or very little security
      (like Microsoft Windows Me) that are generally targeted for
      single-user environments have big problems. But even systems
      designed with multi-user in mind (like Unix and its children)
      have problems.
    </para>
    <para>
      One of these problems; perhaps the biggest one, is the fact that
      (in Unix-derivatives) it puts far too much power in the hands of
      the root user &mdash; power that you may not want someone to
      have. Perhaps you have a computer where you would like a certain
      person to have just a tiny bit of the capabilities of the root
      user (for example, the capability to add new users). You also
      want this user to be able to modify existing users, but you do
      not want him to be able to remove existing users.
    </para>
    <para>
      In a traditional multi-user system like GNU/Linux, this is not
      possible. There are some workarounds, like sudo, that may be
      able to help you (by letting this unprivileged user run certain
      commands like adduser and usermod as root), but it is really not
      a well-designed and clean the solution.
    </para>
  </section>
</chapter>
